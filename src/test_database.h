const char* test_database =
"kernels-0-arguments-0-element size=32\n"
"kernels-0-arguments-0-fundamental type=f\n"
"kernels-0-arguments-0-isl read map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_pos_x[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-0-isl read params-0=size_x\n"
"kernels-0-arguments-0-isl read params-1=size_y\n"
"kernels-0-arguments-0-isl read params-2=size_z\n"
"kernels-0-arguments-0-isl write map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_pos_x[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-0-isl write params-0=size_x\n"
"kernels-0-arguments-0-isl write params-1=size_y\n"
"kernels-0-arguments-0-isl write params-2=size_z\n"
"kernels-0-arguments-0-name=pos_x\n"
"kernels-0-arguments-0-num dimensions=1\n"
"kernels-0-arguments-0-pointer level=1\n"
"kernels-0-arguments-0-size=0\n"
"kernels-0-arguments-0-type name=float addrspace(1)*\n"
"kernels-0-arguments-1-element size=32\n"
"kernels-0-arguments-1-fundamental type=f\n"
"kernels-0-arguments-1-isl read map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_pos_y[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-1-isl read params-0=size_x\n"
"kernels-0-arguments-1-isl read params-1=size_y\n"
"kernels-0-arguments-1-isl read params-2=size_z\n"
"kernels-0-arguments-1-isl write map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_pos_y[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-1-isl write params-0=size_x\n"
"kernels-0-arguments-1-isl write params-1=size_y\n"
"kernels-0-arguments-1-isl write params-2=size_z\n"
"kernels-0-arguments-1-name=pos_y\n"
"kernels-0-arguments-1-num dimensions=1\n"
"kernels-0-arguments-1-pointer level=1\n"
"kernels-0-arguments-1-size=0\n"
"kernels-0-arguments-1-type name=float addrspace(1)*\n"
"kernels-0-arguments-2-element size=32\n"
"kernels-0-arguments-2-fundamental type=f\n"
"kernels-0-arguments-2-isl read map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_pos_z[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-2-isl read params-0=size_x\n"
"kernels-0-arguments-2-isl read params-1=size_y\n"
"kernels-0-arguments-2-isl read params-2=size_z\n"
"kernels-0-arguments-2-isl write map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_pos_z[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-2-isl write params-0=size_x\n"
"kernels-0-arguments-2-isl write params-1=size_y\n"
"kernels-0-arguments-2-isl write params-2=size_z\n"
"kernels-0-arguments-2-name=pos_z\n"
"kernels-0-arguments-2-num dimensions=1\n"
"kernels-0-arguments-2-pointer level=1\n"
"kernels-0-arguments-2-size=0\n"
"kernels-0-arguments-2-type name=float addrspace(1)*\n"
"kernels-0-arguments-3-element size=32\n"
"kernels-0-arguments-3-fundamental type=f\n"
"kernels-0-arguments-3-isl read map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_vel_x[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-3-isl read params-0=size_x\n"
"kernels-0-arguments-3-isl read params-1=size_y\n"
"kernels-0-arguments-3-isl read params-2=size_z\n"
"kernels-0-arguments-3-name=vel_x\n"
"kernels-0-arguments-3-num dimensions=1\n"
"kernels-0-arguments-3-pointer level=1\n"
"kernels-0-arguments-3-size=0\n"
"kernels-0-arguments-3-type name=float addrspace(1)*\n"
"kernels-0-arguments-4-element size=32\n"
"kernels-0-arguments-4-fundamental type=f\n"
"kernels-0-arguments-4-isl read map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_vel_y[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-4-isl read params-0=size_x\n"
"kernels-0-arguments-4-isl read params-1=size_y\n"
"kernels-0-arguments-4-isl read params-2=size_z\n"
"kernels-0-arguments-4-name=vel_y\n"
"kernels-0-arguments-4-num dimensions=1\n"
"kernels-0-arguments-4-pointer level=1\n"
"kernels-0-arguments-4-size=0\n"
"kernels-0-arguments-4-type name=float addrspace(1)*\n"
"kernels-0-arguments-5-element size=32\n"
"kernels-0-arguments-5-fundamental type=f\n"
"kernels-0-arguments-5-isl read map=[size_x, size_y, size_z] -> { Stmt_entry[i0, i1, i2] -> MemRef_vel_z[i0] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-0-arguments-5-isl read params-0=size_x\n"
"kernels-0-arguments-5-isl read params-1=size_y\n"
"kernels-0-arguments-5-isl read params-2=size_z\n"
"kernels-0-arguments-5-name=vel_z\n"
"kernels-0-arguments-5-num dimensions=1\n"
"kernels-0-arguments-5-pointer level=1\n"
"kernels-0-arguments-5-size=0\n"
"kernels-0-arguments-5-type name=float addrspace(1)*\n"
"kernels-0-arguments-6-element size=0\n"
"kernels-0-arguments-6-fundamental type=f\n"
"kernels-0-arguments-6-name=dt\n"
"kernels-0-arguments-6-pointer level=0\n"
"kernels-0-arguments-6-size=32\n"
"kernels-0-arguments-6-type name=float\n"
"kernels-0-arguments-7-element size=0\n"
"kernels-0-arguments-7-fundamental type=i\n"
"kernels-0-arguments-7-name=N\n"
"kernels-0-arguments-7-pointer level=0\n"
"kernels-0-arguments-7-size=32\n"
"kernels-0-arguments-7-type name=i32\n"
"kernels-0-name=updatePositions\n"
"kernels-0-partitioning=x\n"
"kernels-1-arguments-0-element size=32\n"
"kernels-1-arguments-0-fundamental type=f\n"
"kernels-1-arguments-0-isl read map=[size_x, size_y, size_z, N] -> { Stmt_cond_end[i0, i1, i2, i3] -> MemRef_masses[i3] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z and 0 <= i3 < N }\n"
"kernels-1-arguments-0-isl read params-0=size_x\n"
"kernels-1-arguments-0-isl read params-1=size_y\n"
"kernels-1-arguments-0-isl read params-2=size_z\n"
"kernels-1-arguments-0-isl read params-3=arg9\n"
"kernels-1-arguments-0-name=masses\n"
"kernels-1-arguments-0-num dimensions=1\n"
"kernels-1-arguments-0-pointer level=1\n"
"kernels-1-arguments-0-size=0\n"
"kernels-1-arguments-0-type name=float addrspace(1)*\n"
"kernels-1-arguments-1-element size=32\n"
"kernels-1-arguments-1-fundamental type=f\n"
"kernels-1-arguments-1-isl read map=[size_x, size_y, size_z, N] -> { Stmt_for_body_lr_ph[i0, i1, i2] -> MemRef_pos_x[i0] : N > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z; Stmt_for_body__TO__cond_end[i0, i1, i2, i3] -> MemRef_pos_x[i3] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z and 0 <= i3 < N }\n"
"kernels-1-arguments-1-isl read params-0=size_x\n"
"kernels-1-arguments-1-isl read params-1=size_y\n"
"kernels-1-arguments-1-isl read params-2=size_z\n"
"kernels-1-arguments-1-isl read params-3=arg9\n"
"kernels-1-arguments-1-name=pos_x\n"
"kernels-1-arguments-1-num dimensions=1\n"
"kernels-1-arguments-1-pointer level=1\n"
"kernels-1-arguments-1-size=0\n"
"kernels-1-arguments-1-type name=float addrspace(1)*\n"
"kernels-1-arguments-2-element size=32\n"
"kernels-1-arguments-2-fundamental type=f\n"
"kernels-1-arguments-2-isl read map=[size_x, size_y, size_z, N] -> { Stmt_for_body__TO__cond_end[i0, i1, i2, i3] -> MemRef_pos_y[i3] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z and 0 <= i3 < N; Stmt_for_body_lr_ph[i0, i1, i2] -> MemRef_pos_y[i0] : N > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-1-arguments-2-isl read params-0=size_x\n"
"kernels-1-arguments-2-isl read params-1=size_y\n"
"kernels-1-arguments-2-isl read params-2=size_z\n"
"kernels-1-arguments-2-isl read params-3=arg9\n"
"kernels-1-arguments-2-name=pos_y\n"
"kernels-1-arguments-2-num dimensions=1\n"
"kernels-1-arguments-2-pointer level=1\n"
"kernels-1-arguments-2-size=0\n"
"kernels-1-arguments-2-type name=float addrspace(1)*\n"
"kernels-1-arguments-3-element size=32\n"
"kernels-1-arguments-3-fundamental type=f\n"
"kernels-1-arguments-3-isl read map=[size_x, size_y, size_z, N] -> { Stmt_for_body__TO__cond_end[i0, i1, i2, i3] -> MemRef_pos_z[i3] : 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z and 0 <= i3 < N; Stmt_for_body_lr_ph[i0, i1, i2] -> MemRef_pos_z[i0] : N > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-1-arguments-3-isl read params-0=size_x\n"
"kernels-1-arguments-3-isl read params-1=size_y\n"
"kernels-1-arguments-3-isl read params-2=size_z\n"
"kernels-1-arguments-3-isl read params-3=arg9\n"
"kernels-1-arguments-3-name=pos_z\n"
"kernels-1-arguments-3-num dimensions=1\n"
"kernels-1-arguments-3-pointer level=1\n"
"kernels-1-arguments-3-size=0\n"
"kernels-1-arguments-3-type name=float addrspace(1)*\n"
"kernels-1-arguments-4-element size=32\n"
"kernels-1-arguments-4-fundamental type=f\n"
"kernels-1-arguments-4-isl read map=[size_x, size_y, size_z, N] -> { Stmt_for_end[i0, i1, i2] -> MemRef_vel_x[i0] : size_x > 0 and size_y > 0 and size_z > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-1-arguments-4-isl read params-0=size_x\n"
"kernels-1-arguments-4-isl read params-1=size_y\n"
"kernels-1-arguments-4-isl read params-2=size_z\n"
"kernels-1-arguments-4-isl read params-3=arg9\n"
"kernels-1-arguments-4-isl write map=[size_x, size_y, size_z, N] -> { Stmt_for_end[i0, i1, i2] -> MemRef_vel_x[i0] : size_x > 0 and size_y > 0 and size_z > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-1-arguments-4-isl write params-0=size_x\n"
"kernels-1-arguments-4-isl write params-1=size_y\n"
"kernels-1-arguments-4-isl write params-2=size_z\n"
"kernels-1-arguments-4-isl write params-3=arg9\n"
"kernels-1-arguments-4-name=vel_x\n"
"kernels-1-arguments-4-num dimensions=1\n"
"kernels-1-arguments-4-pointer level=1\n"
"kernels-1-arguments-4-size=0\n"
"kernels-1-arguments-4-type name=float addrspace(1)*\n"
"kernels-1-arguments-5-element size=32\n"
"kernels-1-arguments-5-fundamental type=f\n"
"kernels-1-arguments-5-isl read map=[size_x, size_y, size_z, N] -> { Stmt_for_end[i0, i1, i2] -> MemRef_vel_y[i0] : size_x > 0 and size_y > 0 and size_z > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-1-arguments-5-isl read params-0=size_x\n"
"kernels-1-arguments-5-isl read params-1=size_y\n"
"kernels-1-arguments-5-isl read params-2=size_z\n"
"kernels-1-arguments-5-isl read params-3=arg9\n"
"kernels-1-arguments-5-isl write map=[size_x, size_y, size_z, N] -> { Stmt_for_end[i0, i1, i2] -> MemRef_vel_y[i0] : size_x > 0 and size_y > 0 and size_z > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-1-arguments-5-isl write params-0=size_x\n"
"kernels-1-arguments-5-isl write params-1=size_y\n"
"kernels-1-arguments-5-isl write params-2=size_z\n"
"kernels-1-arguments-5-isl write params-3=arg9\n"
"kernels-1-arguments-5-name=vel_y\n"
"kernels-1-arguments-5-num dimensions=1\n"
"kernels-1-arguments-5-pointer level=1\n"
"kernels-1-arguments-5-size=0\n"
"kernels-1-arguments-5-type name=float addrspace(1)*\n"
"kernels-1-arguments-6-element size=32\n"
"kernels-1-arguments-6-fundamental type=f\n"
"kernels-1-arguments-6-isl read map=[size_x, size_y, size_z, N] -> { Stmt_for_end[i0, i1, i2] -> MemRef_vel_z[i0] : size_x > 0 and size_y > 0 and size_z > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-1-arguments-6-isl read params-0=size_x\n"
"kernels-1-arguments-6-isl read params-1=size_y\n"
"kernels-1-arguments-6-isl read params-2=size_z\n"
"kernels-1-arguments-6-isl read params-3=arg9\n"
"kernels-1-arguments-6-isl write map=[size_x, size_y, size_z, N] -> { Stmt_for_end[i0, i1, i2] -> MemRef_vel_z[i0] : size_x > 0 and size_y > 0 and size_z > 0 and 0 <= i0 < size_x and 0 <= i1 < size_y and 0 <= i2 < size_z }\n"
"kernels-1-arguments-6-isl write params-0=size_x\n"
"kernels-1-arguments-6-isl write params-1=size_y\n"
"kernels-1-arguments-6-isl write params-2=size_z\n"
"kernels-1-arguments-6-isl write params-3=arg9\n"
"kernels-1-arguments-6-name=vel_z\n"
"kernels-1-arguments-6-num dimensions=1\n"
"kernels-1-arguments-6-pointer level=1\n"
"kernels-1-arguments-6-size=0\n"
"kernels-1-arguments-6-type name=float addrspace(1)*\n"
"kernels-1-arguments-7-element size=0\n"
"kernels-1-arguments-7-fundamental type=f\n"
"kernels-1-arguments-7-name=dt\n"
"kernels-1-arguments-7-pointer level=0\n"
"kernels-1-arguments-7-size=32\n"
"kernels-1-arguments-7-type name=float\n"
"kernels-1-arguments-8-element size=0\n"
"kernels-1-arguments-8-fundamental type=f\n"
"kernels-1-arguments-8-name=epsilon\n"
"kernels-1-arguments-8-pointer level=0\n"
"kernels-1-arguments-8-size=32\n"
"kernels-1-arguments-8-type name=float\n"
"kernels-1-arguments-9-element size=0\n"
"kernels-1-arguments-9-fundamental type=i\n"
"kernels-1-arguments-9-name=N\n"
"kernels-1-arguments-9-pointer level=0\n"
"kernels-1-arguments-9-size=32\n"
"kernels-1-arguments-9-type name=i32\n"
"kernels-1-name=updateSpeed\n"
"kernels-1-partitioning=x\n"
;
